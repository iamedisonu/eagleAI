{
  "name": "eagle-ai",
  "version": "1.0.0",
  "description": "AI-powered career intelligence platform for students",
  "type": "module",
  "author": "EagleAI Team",
  "license": "MIT",
  "keywords": [
    "career",
    "ai",
    "students",
    "job-matching",
    "resume-analysis",
    "mentorship",
    "react",
    "vite"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/eagleai.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/eagleai/issues"
  },
  "homepage": "https://eagleai.com",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "lint": "eslint . --ext js,jsx,ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext js,jsx,ts,tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "clean": "rm -rf dist node_modules/.vite",
    "clean:all": "rm -rf dist node_modules package-lock.json",
    "reinstall": "npm run clean:all && npm install",
    "start": "npm run dev",
    "build:analyze": "npm run build && npx vite-bundle-analyzer dist",
    "build:stats": "npm run build -- --mode analyze",
    "serve": "npm run build && npm run preview",
    "check": "npm run type-check && npm run lint && npm run format:check",
    "check:fix": "npm run lint:fix && npm run format",
    "validate": "npm run check && npm run test:ci",
    "backend:dev": "cd backend && npm run dev",
    "backend:start": "cd backend && npm start",
    "backend:build": "cd backend && npm run build",
    "python:dev": "cd backend_python && python run.py",
    "python:start": "cd backend_python && uvicorn main:app --host 0.0.0.0 --port 3001",
    "python:test": "cd backend_python && python -m pytest",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --rmi all",
    "db:seed": "cd backend && npm run seed",
    "db:migrate": "cd backend && npm run migrate",
    "db:reset": "cd backend && npm run reset",
    "scrape:jobs": "cd backend && npm run scrape",
    "match:resumes": "cd backend && npm run match",
    "health:check": "curl -f http://localhost:5173/health || exit 1",
    "health:api": "curl -f http://localhost:3001/health || exit 1",
    "health:python": "curl -f http://localhost:3001/health || exit 1",
    "test:notifications": "node test-notifications.js",
    "demo:notifications": "node demo-notifications.js"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "lucide-react": "^0.263.1",
    "multer": "^2.0.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "socket.io-client": "^4.7.2"
  },
  "devDependencies": {
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.46.0",
    "@vitejs/plugin-react": "^4.0.3",
    "autoprefixer": "^10.4.21",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lint-staged": "^15.2.0",
    "node-fetch": "^3.3.2",
    "postcss": "^8.5.6",
    "prettier": "^3.1.1",
    "tailwindcss": "^3.4.18",
    "typescript": "^5.3.3",
    "vite": "^4.5.14",
    "vite-bundle-analyzer": "^0.7.0",
    "vite-plugin-eslint": "^1.8.1"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": ["<rootDir>/src/setupTests.js"],
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1"
    },
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts",
      "!src/index.jsx",
      "!src/setupTests.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
